type Habits {
    id: Int!
    name: String!
    userId: String!
    habitSetting: HabitSettings
}

input HabitsInput {
    name: String!
    habitSetting: HabitSettingsInput
}

type HabitSettings {
    id: Int!
    complete: Int!
    failed: Int!
    skipped: Int!
    total: Int!
    currentStreak: Int!
    habitId: Int!
}

input HabitSettingsInput {
    complete: Int!
    failed: Int!
    skipped: Int!
    total: Int!
    currentStreak: Int!
}

extend type Query {
    getHabits: [Habits!]!
    getHabitsById(id: Int!): Habits
}

extend type Mutation {
    createHabits(input: HabitsInput!): Habits!
}
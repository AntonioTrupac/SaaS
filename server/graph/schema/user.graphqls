type AuthUser implements Actor {
  id: Int!
  firstName: String!
  lastName: String!
  age: Int!
  email: String!
  password: String!
  phone: String!
  address: [Address!]!
}

input NewAuthUser {
  firstName: String!
  lastName: String!
  age: Int!
  email: String!
  password: String!
  phone: String!
  address: [AddressInput!]!
}

input RefreshTokenInput {
  token: String!
}

type AuthOps {
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewAuthUser!): Any! @goField(forceResolver: true)
  refreshToken(input: RefreshTokenInput!): Any! @goField(forceResolver: true)
}

extend type Query {
  getUser(id: Int!): Any! @goField(forceResolver: true)
}

extend type Mutation {
  auth: AuthOps! @goField(forceResolver: true)
}
